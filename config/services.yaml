# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  photo_directory: "%kernel.project_dir%/public/uploads/photos"
  pictures_directory: "%kernel.project_dir%/public/uploads/pictures"

services:
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: "../src/"
    exclude:
      - "../src/Kernel.php"

  App\EventSubscriber\ActivitySubscriber:
    arguments:
      $security: "@security.helper"
      $entityManager: "@doctrine.orm.entity_manager"
      $requestStack: "@request_stack"
    tags:
      - { name: "kernel.event_subscriber" }

  App\EventSubscriber\AccessDeniedSubscriber:
    arguments:
      $security: "@security.helper"
      $requestStack: "@request_stack"
    tags:
      - { name: "kernel.event_subscriber" }

  App\EventSubscriber\MessageSubscriber:
    arguments:
      $encryptionService: '@App\Service\EncryptionService'
    tags:
      - { name: doctrine.event_subscriber }

  App\EventSubscriber\UserSubscriber:
    arguments:
      $entityManager: '@doctrine.orm.entity_manager'
      $referralService: '@App\Service\ReferralService'
      $interfederationService: '@App\Service\InterfederationService'
      $notificationService: '@App\Service\NotificationService'
      $router: '@router'
    tags:
      - { name: 'kernel.event_subscriber' }
      
  App\DataFixtures\AppFixtures:
    arguments:
      $passwordHasher: "@security.password_hasher"

  App\Service\UserService:
    arguments:
      $securityService: '@App\Service\SecurityService'
      $membershipRepository: '@App\Repository\MembershipRepository'
      $notificationRepository: '@App\Repository\NotificationRepository'
      $messageRepository: '@App\Repository\MessageRepository'

  App\Service\CategoryService:
    arguments:
      $categoryRepository: '@App\Repository\CategoryRepository'

  App\Service\TopicService:
    arguments:
      $topicRepository: '@App\Repository\TopicRepository'

  App\Service\EncryptionService:
    arguments:
      $key: "%env(ENCRYPTION_KEY)%"

  # Uncomment and configure the following services as needed
  # App\EventSubscriber\NotificationSubscriber:
  #   arguments:
  #     $security: '@security.helper'
  #     $notificationService: '@App\Service\NotificationService'
  #   tags:
  #     - { name: doctrine.event_subscriber }

  # App\EventListener\MessageEncryptionListener:
  #   tags:
  #     - { name: doctrine.orm.entity_listener, event: prePersist, entity: App\Entity\Message }
  #     - { name: doctrine.orm.entity_listener, event: preUpdate, entity: App\Entity\Message }
  #     - { name: doctrine.orm.entity_listener, event: postLoad, entity: App\Entity\Message }

  # App\Entity\Message:
  #   calls:
  #     - [setEncryptionService, ['@App\Service\EncryptionService']]

  # App\EventListener\ActivityListener:
  #   tags:
  #     - { name: kernel.event_listener, event: kernel.request }

  # Configuration demand√©e
  # App\Service\GeocoderService:
  #   arguments:
  #     $httpClient: "@http_client"
  #     $provider: "@geocoder_provider"
  #   public: true

  # geocoder_provider:
  #   class: Geocoder\Provider\Nominatim\Nominatim
  #   factory:
  #     ['Geocoder\Provider\Nominatim\Nominatim', "withOpenStreetMapServer"]
  #   arguments:
  #     - "@http_client"
  #     - "unc-app/1.0 (yvesk@kelasi.cloud)"

  # http_client:
  #   class: Http\Client\Curl\Client
  #   arguments: []
