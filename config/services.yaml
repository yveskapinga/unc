# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
  App\Service\EncryptionService:
    arguments:
      $key: "%env(ENCRYPTION_KEY)%"

  App\EventListener\MessageEncryptionListener:
    tags:
      - {
          name: doctrine.orm.entity_listener,
          event: prePersist,
          entity: App\Entity\Message,
        }
      - {
          name: doctrine.orm.entity_listener,
          event: preUpdate,
          entity: App\Entity\Message,
        }
      - {
          name: doctrine.orm.entity_listener,
          event: postLoad,
          entity: App\Entity\Message,
        }
  App\Entity\Message:
    calls:
      - [setEncryptionService, ['@App\Service\EncryptionService']]
  # default configuration for services in *this* file
  App\EventListener\ActivityListener:
    tags:
      - { name: kernel.event_listener, event: kernel.request }
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
  App\DataFixtures\AppFixtures:
    arguments:
      $passwordHasher: "@security.password_hasher"

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: "../src/"
    exclude:
      # - "../src/DependencyInjection/"
      # - "../src/Entity/"
      - "../src/Kernel.php"

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  # Configuration demand√©e
  # App\Service\GeocoderService:
  #   arguments:
  #     $httpClient: "@http_client"
  #     $provider: "@geocoder_provider"
  #   public: true

  # geocoder_provider:
  #   class: Geocoder\Provider\Nominatim\Nominatim
  #   factory:
  #     ['Geocoder\Provider\Nominatim\Nominatim', "withOpenStreetMapServer"]
  #   arguments:
  #     - "@http_client"
  #     - "unc-app/1.0 (yvesk@kelasi.cloud)"
  # http_client:
  #   class: Http\Client\Curl\Client
  #   arguments: []
